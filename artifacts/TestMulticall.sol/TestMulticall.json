{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "functionThatReturnsTuple",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "b",
              "type": "uint256"
            }
          ],
          "internalType": "struct TestMulticall.Tuple",
          "name": "tuple",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "error",
          "type": "string"
        }
      ],
      "name": "functionThatRevertsWithError",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pays",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061062e806100206000396000f3fe6080604052600436106100555760003560e01c8063295b4e171461005a57806334621235146100855780633b16a6a3146100a75780635170a9d0146100d4578063ac9650d8146100f6578063f3e2229714610116575b600080fd5b34801561006657600080fd5b5061006f61011e565b60405161007c919061052d565b60405180910390f35b34801561009157600080fd5b506100a56100a036600461033f565b610124565b005b3480156100b357600080fd5b506100c76100c236600461042b565b610147565b60405161007c9190610516565b3480156100e057600080fd5b506100e9610168565b60405161007c9190610488565b6101096101043660046102d0565b61016c565b60405161007c919061049c565b6100a56102ac565b60005481565b8060405162461bcd60e51b815260040161013e91906104fc565b60405180910390fd5b61014f6102b6565b5060408051808201909152908152602081019190915290565b3390565b60608167ffffffffffffffff8111801561018557600080fd5b506040519080825280602002602001820160405280156101b957816020015b60608152602001906001900390816101a45790505b50905060005b828110156102a557600080308686858181106101d757fe5b90506020028101906101e99190610536565b6040516101f7929190610478565b600060405180830381855af49150503d8060008114610232576040519150601f19603f3d011682016040523d82523d6000602084013e610237565b606091505b5091509150816102835760448151101561025057600080fd5b6004810190508080602001905181019061026a91906103b8565b60405162461bcd60e51b815260040161013e91906104fc565b8084848151811061029057fe5b602090810291909101015250506001016101bf565b5092915050565b6000805434019055565b604051806040016040528060008152602001600081525090565b600080602083850312156102e2578182fd5b823567ffffffffffffffff808211156102f9578384fd5b818501915085601f83011261030c578384fd5b81358181111561031a578485fd5b866020808302850101111561032d578485fd5b60209290920196919550909350505050565b600060208284031215610350578081fd5b813567ffffffffffffffff811115610366578182fd5b8201601f81018413610376578182fd5b8035610389610384826105a6565b610582565b81815285602083850101111561039d578384fd5b81602084016020830137908101602001929092525092915050565b6000602082840312156103c9578081fd5b815167ffffffffffffffff8111156103df578182fd5b8201601f810184136103ef578182fd5b80516103fd610384826105a6565b818152856020838501011115610411578384fd5b6104228260208301602086016105c8565b95945050505050565b6000806040838503121561043d578182fd5b50508035926020909101359150565b600081518084526104648160208601602086016105c8565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156104ef57603f198886030184526104dd85835161044c565b945092850192908501906001016104c1565b5092979650505050505050565b60006020825261050f602083018461044c565b9392505050565b815181526020918201519181019190915260400190565b90815260200190565b6000808335601e1984360301811261054c578283fd5b83018035915067ffffffffffffffff821115610566578283fd5b60200191503681900382131561057b57600080fd5b9250929050565b60405181810167ffffffffffffffff8111828210171561059e57fe5b604052919050565b600067ffffffffffffffff8211156105ba57fe5b50601f01601f191660200190565b60005b838110156105e35781810151838201526020016105cb565b838111156105f2576000848401525b5050505056fea2646970667358221220a482e0aa444cf6d1e1930a3126aa9633984a7c71b50eafa06cf81011b006b56664736f6c63430007060033",
    "sourceMap": "117:555:72:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100555760003560e01c8063295b4e171461005a57806334621235146100855780633b16a6a3146100a75780635170a9d0146100d4578063ac9650d8146100f6578063f3e2229714610116575b600080fd5b34801561006657600080fd5b5061006f61011e565b60405161007c919061052d565b60405180910390f35b34801561009157600080fd5b506100a56100a036600461033f565b610124565b005b3480156100b357600080fd5b506100c76100c236600461042b565b610147565b60405161007c9190610516565b3480156100e057600080fd5b506100e9610168565b60405161007c9190610488565b6101096101043660046102d0565b61016c565b60405161007c919061049c565b6100a56102ac565b60005481565b8060405162461bcd60e51b815260040161013e91906104fc565b60405180910390fd5b61014f6102b6565b5060408051808201909152908152602081019190915290565b3390565b60608167ffffffffffffffff8111801561018557600080fd5b506040519080825280602002602001820160405280156101b957816020015b60608152602001906001900390816101a45790505b50905060005b828110156102a557600080308686858181106101d757fe5b90506020028101906101e99190610536565b6040516101f7929190610478565b600060405180830381855af49150503d8060008114610232576040519150601f19603f3d011682016040523d82523d6000602084013e610237565b606091505b5091509150816102835760448151101561025057600080fd5b6004810190508080602001905181019061026a91906103b8565b60405162461bcd60e51b815260040161013e91906104fc565b8084848151811061029057fe5b602090810291909101015250506001016101bf565b5092915050565b6000805434019055565b604051806040016040528060008152602001600081525090565b600080602083850312156102e2578182fd5b823567ffffffffffffffff808211156102f9578384fd5b818501915085601f83011261030c578384fd5b81358181111561031a578485fd5b866020808302850101111561032d578485fd5b60209290920196919550909350505050565b600060208284031215610350578081fd5b813567ffffffffffffffff811115610366578182fd5b8201601f81018413610376578182fd5b8035610389610384826105a6565b610582565b81815285602083850101111561039d578384fd5b81602084016020830137908101602001929092525092915050565b6000602082840312156103c9578081fd5b815167ffffffffffffffff8111156103df578182fd5b8201601f810184136103ef578182fd5b80516103fd610384826105a6565b818152856020838501011115610411578384fd5b6104228260208301602086016105c8565b95945050505050565b6000806040838503121561043d578182fd5b50508035926020909101359150565b600081518084526104648160208601602086016105c8565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156104ef57603f198886030184526104dd85835161044c565b945092850192908501906001016104c1565b5092979650505050505050565b60006020825261050f602083018461044c565b9392505050565b815181526020918201519181019190915260400190565b90815260200190565b6000808335601e1984360301811261054c578283fd5b83018035915067ffffffffffffffff821115610566578283fd5b60200191503681900382131561057b57600080fd5b9250929050565b60405181810167ffffffffffffffff8111828210171561059e57fe5b604052919050565b600067ffffffffffffffff8211156105ba57fe5b50601f01601f191660200190565b60005b838110156105e35781810151838201526020016105cb565b838111156105f2576000848401525b5050505056fea2646970667358221220a482e0aa444cf6d1e1930a3126aa9633984a7c71b50eafa06cf81011b006b56664736f6c63430007060033",
    "sourceMap": "117:555:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;159:103;;;;;;;;;;-1:-1:-1;159:103:72;;;;;:::i;:::-;;:::i;:::-;;332:143;;;;;;;;;;-1:-1:-1;332:143:72;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;580:90::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;308:653:7:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;507:67:72:-;;;:::i;481:19::-;;;;:::o;159:103::-;249:5;242:13;;-1:-1:-1;;;242:13:72;;;;;;;;:::i;:::-;;;;;;;;332:143;411:18;;:::i;:::-;-1:-1:-1;449:19:72;;;;;;;;;;;;;;;;;;;;332:143::o;580:90::-;653:10;580:90;:::o;308:653:7:-;383:22;439:4;427:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:34;;466:9;461:494;481:15;;;461:494;;;518:12;;563:4;582;;587:1;582:7;;;;;;;;;;;;;;;;;;:::i;:::-;555:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:73;;;;610:7;605:306;;737:2;721:6;:13;:18;717:32;;;741:8;;;717:32;820:4;812:6;808:17;798:27;;878:6;867:28;;;;;;;;;;;;:::i;:::-;860:36;;-1:-1:-1;;;860:36:7;;;;;;;;:::i;605:306::-;938:6;925:7;933:1;925:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;498:3:7;;461:494;;;;308:653;;;;:::o;507:67:72:-;550:4;:17;;558:9;550:17;;;507:67::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;14:677:124:-;;;172:2;160:9;151:7;147:23;143:32;140:2;;;193:6;185;178:22;140:2;238:9;225:23;267:18;308:2;300:6;297:14;294:2;;;329:6;321;314:22;294:2;372:6;361:9;357:22;347:32;;417:7;410:4;406:2;402:13;398:27;388:2;;444:6;436;429:22;388:2;489;476:16;515:2;507:6;504:14;501:2;;;536:6;528;521:22;501:2;595:7;590:2;584;576:6;572:15;568:2;564:24;560:33;557:46;554:2;;;621:6;613;606:22;554:2;657;649:11;;;;;679:6;;-1:-1:-1;130:561:124;;-1:-1:-1;;;;130:561:124:o;696:719::-;;818:2;806:9;797:7;793:23;789:32;786:2;;;839:6;831;824:22;786:2;884:9;871:23;917:18;909:6;906:30;903:2;;;954:6;946;939:22;903:2;982:22;;1035:4;1027:13;;1023:27;-1:-1:-1;1013:2:124;;1069:6;1061;1054:22;1013:2;1110;1097:16;1135:50;1150:34;1181:2;1150:34;:::i;:::-;1135:50;:::i;:::-;1208:2;1201:5;1194:17;1248:7;1243:2;1238;1234;1230:11;1226:20;1223:33;1220:2;;;1274:6;1266;1259:22;1220:2;1334;1329;1325;1321:11;1316:2;1309:5;1305:14;1292:45;1357:14;;;1373:2;1353:23;1346:39;;;;-1:-1:-1;1361:5:124;776:639;-1:-1:-1;;776:639:124:o;1420:677::-;;1553:2;1541:9;1532:7;1528:23;1524:32;1521:2;;;1574:6;1566;1559:22;1521:2;1612:9;1606:16;1645:18;1637:6;1634:30;1631:2;;;1682:6;1674;1667:22;1631:2;1710:22;;1763:4;1755:13;;1751:27;-1:-1:-1;1741:2:124;;1797:6;1789;1782:22;1741:2;1831;1825:9;1856:50;1871:34;1902:2;1871:34;:::i;1856:50::-;1929:2;1922:5;1915:17;1969:7;1964:2;1959;1955;1951:11;1947:20;1944:33;1941:2;;;1995:6;1987;1980:22;1941:2;2013:54;2064:2;2059;2052:5;2048:14;2043:2;2039;2035:11;2013:54;:::i;:::-;2086:5;1511:586;-1:-1:-1;;;;;1511:586:124:o;2102:258::-;;;2231:2;2219:9;2210:7;2206:23;2202:32;2199:2;;;2252:6;2244;2237:22;2199:2;-1:-1:-1;;2280:23:124;;;2350:2;2335:18;;;2322:32;;-1:-1:-1;2189:171:124:o;2365:259::-;;2446:5;2440:12;2473:6;2468:3;2461:19;2489:63;2545:6;2538:4;2533:3;2529:14;2522:4;2515:5;2511:16;2489:63;:::i;:::-;2606:2;2585:15;-1:-1:-1;;2581:29:124;2572:39;;;;2613:4;2568:50;;2416:208;-1:-1:-1;;2416:208:124:o;2629:273::-;;2812:6;2804;2799:3;2786:33;2838:16;;2863:15;;;2838:16;2776:126;-1:-1:-1;2776:126:124:o;2907:203::-;-1:-1:-1;;;;;3071:32:124;;;;3053:51;;3041:2;3026:18;;3008:102::o;3115:806::-;;3304:2;3344;3333:9;3329:18;3374:2;3363:9;3356:21;3397:6;3432;3426:13;3463:6;3455;3448:22;3501:2;3490:9;3486:18;3479:25;;3564:2;3558;3550:6;3546:15;3535:9;3531:31;3527:40;3513:54;;3602:2;3594:6;3590:15;3623:4;3636:256;3650:6;3647:1;3644:13;3636:256;;;3743:2;3739:7;3727:9;3719:6;3715:22;3711:36;3706:3;3699:49;3771:41;3805:6;3796;3790:13;3771:41;:::i;:::-;3761:51;-1:-1:-1;3870:12:124;;;;3835:15;;;;3672:1;3665:9;3636:256;;;-1:-1:-1;3909:6:124;;3284:637;-1:-1:-1;;;;;;;3284:637:124:o;3926:221::-;;4075:2;4064:9;4057:21;4095:46;4137:2;4126:9;4122:18;4114:6;4095:46;:::i;:::-;4087:54;4047:100;-1:-1:-1;;;4047:100:124:o;4152:295::-;4364:13;;4346:32;;4434:4;4422:17;;;4416:24;4394:20;;;4387:54;;;;4334:2;4319:18;;4301:146::o;4452:177::-;4598:25;;;4586:2;4571:18;;4553:76::o;4634:533::-;;;4777:11;4764:25;4871:2;4867:7;4856:8;4840:14;4836:29;4832:43;4812:18;4808:68;4798:2;;4893:4;4887;4880:18;4798:2;4923:33;;4975:20;;;-1:-1:-1;5018:18:124;5007:30;;5004:2;;;5053:4;5047;5040:18;5004:2;5089:4;5077:17;;-1:-1:-1;5120:14:124;5116:27;;;5106:38;;5103:2;;;5157:1;5154;5147:12;5103:2;4728:439;;;;;:::o;5172:242::-;5242:2;5236:9;5272:17;;;5319:18;5304:34;;5340:22;;;5301:62;5298:2;;;5366:9;5298:2;5393;5386:22;5216:198;;-1:-1:-1;5216:198:124:o;5419:182::-;;5503:18;5495:6;5492:30;5489:2;;;5525:9;5489:2;-1:-1:-1;5584:2:124;5561:17;-1:-1:-1;;5557:31:124;5590:4;5553:42;;5479:122::o;5606:258::-;5678:1;5688:113;5702:6;5699:1;5696:13;5688:113;;;5778:11;;;5772:18;5759:11;;;5752:39;5724:2;5717:10;5688:113;;;5819:6;5816:1;5813:13;5810:2;;;5854:1;5845:6;5840:3;5836:16;5829:27;5810:2;;5659:205;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "functionThatReturnsTuple(uint256,uint256)": "3b16a6a3",
    "functionThatRevertsWithError(string)": "34621235",
    "multicall(bytes[])": "ac9650d8",
    "paid()": "295b4e17",
    "pays()": "f3e22297",
    "returnSender()": "5170a9d0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"functionThatReturnsTuple\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"internalType\":\"struct TestMulticall.Tuple\",\"name\":\"tuple\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"functionThatRevertsWithError\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pays\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestMulticall.sol\":\"TestMulticall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@mageswap/=node_modules/@mageswap/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/base/Multicall.sol\":{\"keccak256\":\"0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803\",\"dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER\"]},\"contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"contracts/test/TestMulticall.sol\":{\"keccak256\":\"0x5d6dfddfcfe6cb7472b05ae5faf86a2218f834474df133faec1739f8885bb3cb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://74658567f2b1526f5c71502852c3c4005077e9ebcaa7f4db991a49ad3352a768\",\"dweb:/ipfs/Qmba8ukVjggAuixxMYepYxiRVXsuXAJBSE5gi48UfrtsYz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "b",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "functionThatReturnsTuple",
          "outputs": [
            {
              "internalType": "struct TestMulticall.Tuple",
              "name": "tuple",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "a",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "b",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "error",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "functionThatRevertsWithError"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "pays"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "returnSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@mageswap/=node_modules/@mageswap/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/TestMulticall.sol": "TestMulticall"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Multicall.sol": {
        "keccak256": "0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037",
        "urls": [
          "bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803",
          "dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IMulticall.sol": {
        "keccak256": "0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b",
        "urls": [
          "bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016",
          "dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/TestMulticall.sol": {
        "keccak256": "0x5d6dfddfcfe6cb7472b05ae5faf86a2218f834474df133faec1739f8885bb3cb",
        "urls": [
          "bzz-raw://74658567f2b1526f5c71502852c3c4005077e9ebcaa7f4db991a49ad3352a768",
          "dweb:/ipfs/Qmba8ukVjggAuixxMYepYxiRVXsuXAJBSE5gi48UfrtsYz"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/TestMulticall.sol",
    "id": 13126,
    "exportedSymbols": {
      "IMulticall": [
        4017
      ],
      "Multicall": [
        2907
      ],
      "TestMulticall": [
        13125
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:634:72",
    "nodes": [
      {
        "id": 13068,
        "nodeType": "PragmaDirective",
        "src": "39:23:72",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 13069,
        "nodeType": "PragmaDirective",
        "src": "63:19:72",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 13070,
        "nodeType": "ImportDirective",
        "src": "84:31:72",
        "nodes": [],
        "absolutePath": "contracts/base/Multicall.sol",
        "file": "../base/Multicall.sol",
        "scope": 13126,
        "sourceUnit": 2908,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13125,
        "nodeType": "ContractDefinition",
        "src": "117:555:72",
        "nodes": [
          {
            "id": 13082,
            "nodeType": "FunctionDefinition",
            "src": "159:103:72",
            "nodes": [],
            "body": {
              "id": 13081,
              "nodeType": "Block",
              "src": "232:30:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13078,
                        "name": "error",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13074,
                        "src": "249:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 13077,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "242:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 13079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "242:13:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13080,
                  "nodeType": "ExpressionStatement",
                  "src": "242:13:72"
                }
              ]
            },
            "functionSelector": "34621235",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionThatRevertsWithError",
            "parameters": {
              "id": 13075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13074,
                  "mutability": "mutable",
                  "name": "error",
                  "nodeType": "VariableDeclaration",
                  "scope": 13082,
                  "src": "197:19:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "196:21:72"
            },
            "returnParameters": {
              "id": 13076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:72"
            },
            "scope": 13125,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13087,
            "nodeType": "StructDefinition",
            "src": "268:58:72",
            "nodes": [],
            "canonicalName": "TestMulticall.Tuple",
            "members": [
              {
                "constant": false,
                "id": 13084,
                "mutability": "mutable",
                "name": "a",
                "nodeType": "VariableDeclaration",
                "scope": 13087,
                "src": "291:9:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13083,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:7:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13086,
                "mutability": "mutable",
                "name": "b",
                "nodeType": "VariableDeclaration",
                "scope": 13087,
                "src": "310:9:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13085,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "310:7:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Tuple",
            "scope": 13125,
            "visibility": "public"
          },
          {
            "id": 13104,
            "nodeType": "FunctionDefinition",
            "src": "332:143:72",
            "nodes": [],
            "body": {
              "id": 13103,
              "nodeType": "Block",
              "src": "431:44:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13096,
                      "name": "tuple",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13094,
                      "src": "441:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tuple_$13087_memory_ptr",
                        "typeString": "struct TestMulticall.Tuple memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13098,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13089,
                          "src": "459:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 13099,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13091,
                          "src": "465:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13097,
                        "name": "Tuple",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13087,
                        "src": "449:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Tuple_$13087_storage_ptr_$",
                          "typeString": "type(struct TestMulticall.Tuple storage pointer)"
                        }
                      },
                      "id": 13100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "b",
                        "a"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "449:19:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tuple_$13087_memory_ptr",
                        "typeString": "struct TestMulticall.Tuple memory"
                      }
                    },
                    "src": "441:27:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tuple_$13087_memory_ptr",
                      "typeString": "struct TestMulticall.Tuple memory"
                    }
                  },
                  "id": 13102,
                  "nodeType": "ExpressionStatement",
                  "src": "441:27:72"
                }
              ]
            },
            "functionSelector": "3b16a6a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionThatReturnsTuple",
            "parameters": {
              "id": 13092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13089,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 13104,
                  "src": "366:9:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13091,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 13104,
                  "src": "377:9:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "365:22:72"
            },
            "returnParameters": {
              "id": 13095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13094,
                  "mutability": "mutable",
                  "name": "tuple",
                  "nodeType": "VariableDeclaration",
                  "scope": 13104,
                  "src": "411:18:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Tuple_$13087_memory_ptr",
                    "typeString": "struct TestMulticall.Tuple"
                  },
                  "typeName": {
                    "id": 13093,
                    "name": "Tuple",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13087,
                    "src": "411:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tuple_$13087_storage_ptr",
                      "typeString": "struct TestMulticall.Tuple"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:20:72"
            },
            "scope": 13125,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13106,
            "nodeType": "VariableDeclaration",
            "src": "481:19:72",
            "nodes": [],
            "constant": false,
            "functionSelector": "295b4e17",
            "mutability": "mutable",
            "name": "paid",
            "scope": 13125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13115,
            "nodeType": "FunctionDefinition",
            "src": "507:67:72",
            "nodes": [],
            "body": {
              "id": 13114,
              "nodeType": "Block",
              "src": "540:34:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13109,
                      "name": "paid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13106,
                      "src": "550:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13110,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "558:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "558:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "550:17:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "550:17:72"
                }
              ]
            },
            "functionSelector": "f3e22297",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pays",
            "parameters": {
              "id": 13107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:72"
            },
            "returnParameters": {
              "id": 13108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "540:0:72"
            },
            "scope": 13125,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13124,
            "nodeType": "FunctionDefinition",
            "src": "580:90:72",
            "nodes": [],
            "body": {
              "id": 13123,
              "nodeType": "Block",
              "src": "636:34:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 13120,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "653:3:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 13121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "653:10:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 13119,
                  "id": 13122,
                  "nodeType": "Return",
                  "src": "646:17:72"
                }
              ]
            },
            "functionSelector": "5170a9d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnSender",
            "parameters": {
              "id": 13116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:2:72"
            },
            "returnParameters": {
              "id": 13119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13118,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13124,
                  "src": "627:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "626:9:72"
            },
            "scope": 13125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13071,
              "name": "Multicall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2907,
              "src": "143:9:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multicall_$2907",
                "typeString": "contract Multicall"
              }
            },
            "id": 13072,
            "nodeType": "InheritanceSpecifier",
            "src": "143:9:72"
          }
        ],
        "contractDependencies": [
          2907,
          4017
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13125,
          2907,
          4017
        ],
        "name": "TestMulticall",
        "scope": 13126
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 72
}